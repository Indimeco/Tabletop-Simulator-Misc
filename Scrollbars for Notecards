function onLoad(save_state)
    local button_parameters = {}
        button_parameters.click_function = 'scrollDown'
        button_parameters.function_owner = self
        button_parameters.label = ''
        button_parameters.position = {-0.38,0,-0.35}
        button_parameters.rotation = {0,90,0}
        button_parameters.width = 1
        button_parameters.height = 1
        button_parameters.font_size = 1
        self.createButton( button_parameters )
        button_parameters.click_function = 'placeHolder'
        button_parameters.function_owner = self
        button_parameters.label = '<'
        button_parameters.position = {-0.46,5,-0.45}
        button_parameters.rotation = {0,90,0}
        button_parameters.width = 0
        button_parameters.height = 0
        button_parameters.font_size = 70
        self.createButton( button_parameters )

        button_parameters.click_function = 'scrollUp'
        button_parameters.function_owner = self
        button_parameters.label = ''
        button_parameters.position = {-0.38,0,0.35}
        button_parameters.rotation = {0,-90,0}
        button_parameters.width = 1
        button_parameters.height = 1
        button_parameters.font_size = 1
        self.createButton( button_parameters )
        button_parameters.click_function = 'placeHolder'
        button_parameters.function_owner = self
        button_parameters.label = '<'
        button_parameters.position = {-0.46,5,0.45}
        button_parameters.rotation = {0,-90,0}
        button_parameters.width = 0
        button_parameters.height = 0
        button_parameters.font_size = 70
        self.createButton( button_parameters )

    local saveStrings = JSON.decode(save_state)
    if saveStrings == nil then
        above = ''
        below = ''
        starting = self.getDescription()
    else
        above = saveStrings['above']
        below = saveStrings['below']
        starting = saveStrings['starting']
    end

    characterWidthTable = {
    ['`'] = 2381, ['~'] = 2381, ['1'] = 1724, ['!'] = 1493, ['2'] = 2381,
    ['@'] = 4348, ['3'] = 2381, ['#'] = 3030, ['4'] = 2564, ['$'] = 2381,
    ['5'] = 2381, ['%'] = 3846, ['6'] = 2564, ['^'] = 2564, ['7'] = 2174,
    ['&'] = 2777, ['8'] = 2564, ['*'] = 2174, ['9'] = 2564, ['('] = 1724,
    ['0'] = 2564, [')'] = 1724, ['-'] = 1724, ['_'] = 2381, ['='] = 2381,
    ['+'] = 2381, ['q'] = 2564, ['Q'] = 3226, ['w'] = 3704, ['W'] = 4167,
    ['e'] = 2174, ['E'] = 2381, ['r'] = 1724, ['R'] = 2777, ['t'] = 1724,
    ['T'] = 2381, ['y'] = 2564, ['Y'] = 2564, ['u'] = 2564, ['U'] = 3030,
    ['i'] = 1282, ['I'] = 1282, ['o'] = 2381, ['O'] = 3226, ['p'] = 2564,
    ['P'] = 2564, ['['] = 1724, ['{'] = 1724, [']'] = 1724, ['}'] = 1724,
    ['|'] = 1493, ['\\'] = 1923, ['a'] = 2564, ['A'] = 2777, ['s'] = 1923,
    ['S'] = 2381, ['d'] = 2564, ['D'] = 3030, ['f'] = 1724, ['F'] = 2381,
    ['g'] = 2564, ['G'] = 2777, ['h'] = 2564, ['H'] = 3030, ['j'] = 1075,
    ['J'] = 1282, ['k'] = 2381, ['K'] = 2777, ['l'] = 1282, ['L'] = 2174,
    [';'] = 1282, [':'] = 1282, ['\''] = 855, ['"'] = 1724, ['z'] = 1923,
    ['Z'] = 2564, ['x'] = 2381, ['X'] = 2777, ['c'] = 1923, ['C'] = 2564,
    ['v'] = 2564, ['V'] = 2777, ['b'] = 2564, ['B'] = 2564, ['n'] = 2564,
    ['N'] = 3226, ['m'] = 3846, ['M'] = 3846, [','] = 1282, ['<'] = 2174,
    ['.'] = 1282, ['>'] = 2174, ['/'] = 1923, ['?'] = 2174, [' '] = 1282,
    ['\t'] = 5128, ['\r'] = 0, ['\n'] = 100000
}
end

function onSave()
    local saveTable = {}
    saveTable['above'] = above
    saveTable['below'] = below
    saveTable['starting'] = starting
    return JSON.encode(saveTable)
end

function scrollUp()
    if above ~= '' then
        local newPage = string.reverse(getPage(string.reverse(above)))..'\n'
        if self.getDescription() ~= '' then
            local i = string.len(newPage)
            newPage = getPage(newPage..self.getDescription())
            local j = string.len(newPage)
            if i < j then
                above = removeNewline(plainReplace(above,string.sub(newPage,1,i-1),''),'Ending')
                below = removeNewline(removeNewline(plainReplace(self.getDescription(),string.sub(newPage,i+1,j),'')..'\n'..below,'Beginning'),'Ending')
            else
                above = removeNewline(plainReplace(above,newPage,''),'Ending')
                below = removeNewline(self.getDescription()..'\n'..below,'Ending')
            end
        else
            above = removeNewline(plainReplace(above,removeNewline(removeNewline(newPage,'Ending'),'Beginning'),''),'Ending')
        end
        self.setDescription(removeNewline(removeNewline(newPage,'Ending'),'Beginning'))
        starting = self.getDescription()
    end
end

function scrollDown()
    if self.getDescription() ~= '' or below ~= '' then
        local newPage = getPage(self.getDescription())
        above = removeNewline(above..'\n'..newPage,'Beginning')
        local tempPage = string.sub(self.getDescription(),string.len(newPage)+1,-1)
        if tempPage ~= '' then
            newPage = getPage(removeNewline(removeNewline(tempPage..'\n'..below,'Ending'),'Beginning'))
            if string.len(newPage) < string.len(tempPage) then
                tempPage = removeNewline(removeNewline(tempPage,'Ending'),'Beginning')
            else
                tempPage = ''
            end
        else
            tempPage = ''
            newPage = getPage(removeNewline(removeNewline(below,'Ending'),'Beginning'))
        end
        local extraLength1 = getLines(self.getDescription())
        local tempStartingText = getLines(starting)
        self.setDescription(removeNewline(removeNewline(newPage,'Beginning'),'Ending'))
        local extraLength2 = extraLength1['lineCount'] - tempStartingText['lineCount']
        local extraLength3 = getLines(below)
        local extraLength4 = tempStartingText['lineCount'] - extraLength2
        starting = self.getDescription()
        if extraLength2 > 0 and extraLength4 <= extraLength3['lineCount'] and extraLength4 > 0 then
            local extraLength5 = extraLength3[extraLength4]
            below = removeNewline(string.sub(tempPage..below,extraLength5+1),'Beginning')
        else
            if string.len(self.getDescription()) ~= string.len(below) then
                below = removeNewline(removeNewline(string.sub(tempPage..below,string.len(self.getDescription())+1),'Beginning'),'Ending')
            else
                below = ''
            end
        end
    end
end

function getPage(invStr)
-- Iterates through the str and sums the estimated line length based on characterWidthTable for each character in a max 100000 system. Margin for error is 200.
    local lineWidth = 0
    local lineCount = 0
    local placeholder = 1
    local key = ''
    local page = ''
    local i = 1
    while lineCount ~= 9 do
        key = string.sub(invStr, i, i)
        if key == '' then
            page = page..string.sub(invStr,placeholder,i)
            break
        end
        lineWidth = lineWidth + characterWidthTable[key]
        if lineWidth > 99878 then
            if key == '\n' then
                page = page..string.sub(invStr,placeholder,i-1)
                placeholder = i
            else
                page = page..string.sub(invStr,placeholder,i)
                placeholder = i + 1
            end
            lineCount = lineCount + 1
            lineWidth = 0
        end
        i = i + 1
    end
    return page
end

function getLines(str)
    -- Returns a table countaining the number of lines in a string as well as the location of the end of each line.
    local lineWidth = 0
    local lineCount = 0
    local length = string.len(str)
    local placeholder = 1
    local key = ''
    local lineTable = {}
    local i = 1
    while i < 2+string.len(str) do
        key = string.sub(str, i, i)
        if key == '' then
            lineCount = lineCount + 1
            break
        end
        lineWidth = lineWidth + characterWidthTable[key]
        if lineWidth > 99878 then
            if key == '\n' then
                lineTable[lineCount+1] = i-1
                placeholder = i
            else
                lineTable[lineCount+1] = i
                placeholder = i + 1
            end
            lineCount = lineCount + 1
            lineWidth = 0
        end
        i = i + 1
    end
    lineTable['length'] = length
    lineTable['lineCount'] = lineCount
    return lineTable
end

function removeNewline(str, location)
    if location == 'Beginning' then
        while string.sub(str,1,1) == '\n' do
            str = string.sub(str,2,-1)
        end
        return str
    elseif location == 'Ending' then
        while string.sub(str,-1,-1) == '\n' do
            str = string.sub(str,1,-2)
        end
        return str
    end
end

function getFullText()
    local fullText = self.getDescription()
    if above ~= '' then
        fullText = above..'\n'..fullText
    end
    if below ~= '' then
        fullText = fullText..'\n'..below
    end
    return fullText
end

function plainReplace(str, pattern, replacement)
    local x,y = str:find(pattern,1,true)
    if x==nil then
       return str
    else
       return str:sub(1,x-1)..replacement..str:sub(y+1)
    end
end
